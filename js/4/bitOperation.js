log3(`
& | ^  位运算
&  按位与    and   按位比较，相同保持原值，不同设为0
|  按位或    or    按位比较，相同保持原值，不同设为1
^  按位异或  xor   按位比较，相同设为0，不同设为1

    1&1=${1&1}   0001 &  0001 =  0001
    2&1=${2&1}   0010 &  0001 =  0000
    3&1=${3&1}   0011 &  0001 =  0001
    4&1=${4&1}   0100 &  0001 =  0000
    5&1=${5&1}   0101 &  0001 =  0001

    1|2=${1|2}   0001 |  0010 =  0011
    2|2=${2|2}   0010 |  0010 =  0010
    3|2=${3|2}   0011 |  0010 =  0011
    4|2=${4|2}   0100 |  0010 =  0110
    5|2=${5|2}   0101 |  0010 =  0111

    1^2=${1^2}   0001 ^  0010 =  0011
    2^2=${2^2}   0010 ^  0010 =  0000
    3^2=${3^2}   0011 ^  0010 =  0001
    4^2=${4^2}   0100 ^  0010 =  0110
    5^2=${5^2}   0101 ^  0010 =  0111

使用场景，枚举


`);
var 苹果={
    被人咬过:true,
    没有洗:true,
    有毒:true
};

if(苹果.被人咬过){
    log3('被人咬过');
}
if(苹果.没有洗){
    log3('没有洗');
}
if(苹果.有毒){
    log3('有毒');
}

var state;
(function (state) {
    state[state["被人咬过"] = 1] = "被人咬过";
    state[state["没有洗"] = 2] = "没有洗";
    state[state["有毒"] = 4] = "有毒";
})(state || (state = {}));

var 香蕉={
    状态:
    state.被人咬过
    |state.没有洗
}

log2(香蕉.状态);

if(香蕉.状态&state.被人咬过){
    log3('被人咬过');
}
if(香蕉.状态&state.没有洗){
    log3('没有洗');
}
if(香蕉.状态&state.有毒){
    log3('有毒');
}

香蕉.状态=香蕉.状态|state.有毒

if(香蕉.状态&state.有毒){
    log3('有毒');
}