log3(`+与-
代表运算，也代表一个数的正负情况
+=`);


//算数相加，从左往右运算，

//类型不一致的2个类型相加，会转类型为兼容类型，倾向于转成字符串
log("1"+1);

//代表一个数的正负情况
log(-1);
log(+1);

//类似这种令人疑惑的式子
log(1  + - + - + + + + + 1);
//其实是描述很多层带符号的数字
log(1 + (-( + (- (+ (+ (+ (+ (+ 1)))))))));

log3(`
比如我们一个式子是a+=2;
var a=3;
a+=2;

他是简单的拆成a=a+2;`)
var a=3;
a+=2;
log(a);


log3(`

    ++ 自加运算符   他可以放在数字的前面或后面;
`);
var i=1;
i++;
++i;

log3(`

    ++ 参与式子运算的时候，他有个运算顺序。

   ++ j  在前面
        他会先把值加1，然后返回一个值给式子.
   j ++  在后面的时候
        他会先返回一个值给式子，再立刻把值加1.
`);

var j=1;
log2(0+j++);
log3(`
0+j++
会拆分成
0+j;
j=j+1;

0+ ++k

会拆分成
k=k+1;
0+k;

`)
log2(j);

var k=1;
log2(0+ ++k);
log2(k);
